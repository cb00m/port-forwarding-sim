version: "2"

#all machines are connected to the docker 0 network
services:

    database:
        image: mysql:8.0.21
        container_name: database
        restart: always
        command: --default-authentication-plugin=mysql_native_password
        environment:
          - MYSQL_DATABASE=mydatabase
          - MYSQL_USER=user
          - MYSQL_PASSWORD=user-password
          - MYSQL_ROOT_PASSWORD=root-password
        ports:
          - "3306:3306"
          - "33060:33060"
        volumes:
          - "./setup.sql:/docker-entrypoint-initdb.d/setup.sql"
        networks:
          - backend_network
        cap_add:
          - SYS_NICE  # CAP_SYS_NICE


    nginx:
        image: nginx
        container_name: nginx
        depends_on:
          - backend
          - client
        restart: always
        build:
          dockerfile: Dockerfile
          context: ./nginx
        ports:
         - "3050:80"
        networks:
         - backend_network


    backend:
        build: ./backend-service/
        image: backend-service
        container_name: backend-service
        volumes:
            - ./volumes/uploads:/uploads
            - ./volumes/public/contents:/contents
        environment:
            - PORT=3000
            - DATABASE_NAME=back_database
            - DATABASE_USER=user
            - DATABASE_PASSWORD=user-password
            - DATABASE_HOST=db
            - DATABASE_PORT=3306
            - WAIT_HOSTS=database:3306
        networks:
            - backend_network
        depends_on:
            - database
    
    client:
        image: client
        container_name: client
        stdin_open: true
        environment:
          - CHOKIDAR_USEPOLLING=true
        build:
          dockerfile: Dockerfile
          context: ./client
        volumes:
          - /app/node_modules
          - ./client:/app
        networks:
         - backend_network

networks:
    backend_network:
